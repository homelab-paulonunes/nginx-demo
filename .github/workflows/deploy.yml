name: Deploy Application with Azure File Share

on:
  push:
    branches:
      - main

env:
  TARGET_SERVER: SERVER_IP_OCI_1   # Defina aqui o servidor para o deploy
  SERVICE_IMAGE: nginx:latest       # Imagem do serviço
  SERVICE_PORT: 80                  # Porta exposta pelo serviço
  VOLUME_DEST: /usr/share/nginx/html # Caminho dentro do contêiner para o volume

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Obter o nome do repositório dinamicamente
      - name: Set Repository Name as Environment Variable
        id: repo_name
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV
          echo "SERVICE_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      # Obter o SERVER_IP dinamicamente com base no TARGET_SERVER
      - name: Set Server IP
        run: |
          echo "SERVER_IP=${{ secrets[env.TARGET_SERVER] }}" >> $GITHUB_ENV

      # Checkout do repositório
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Baixar e configurar o AzCopy
      - name: Install AzCopy
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https
          echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
          curl -sL https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y azcopy
          azcopy --version

      # Fazer upload do conteúdo local para o Azure File Share
      - name: Upload Content to Azure File Share
        env:
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_FILE_SHARE: ${{ secrets.AZURE_FILE_SHARE }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZCOPY_SPA_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        run: |
          # Login usando Client Secret
          azcopy login --service-principal \
            --application-id "${{ secrets.AZURE_CLIENT_ID }}" \
            --tenant-id "${{ secrets.AZURE_TENANT_ID }}"

          # Sincronizar arquivos com Azure File Share
          azcopy sync ./config "https://${{ env.AZURE_STORAGE_ACCOUNT }}.file.core.windows.net/${{ env.AZURE_FILE_SHARE }}" \
            --recursive

      # Configurar a chave SSH
      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Configurar e executar o Docker Compose no servidor remoto
      - name: Deploy Application with Docker Compose
        env:
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_FILE_SHARE: ${{ secrets.AZURE_FILE_SHARE }}
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.SERVER_IP }} << EOF
            set -e

            # Variáveis
            AZURE_FILE_DIR=${{ env.REPO_NAME }}
            DEPLOY_DIR=/$AZURE_FILE_DIR

            # Criar diretório para o Docker Compose
            sudo mkdir -p $DEPLOY_DIR

            # Gerar arquivo docker-compose.yml
            cat <<EOT > $DEPLOY_DIR/docker-compose.yml
            version: '3.8'

            services:
              ${SERVICE_NAME}:
                image: ${SERVICE_IMAGE}
                container_name: ${SERVICE_NAME}
                ports:
                  - "${SERVICE_PORT}:${SERVICE_PORT}"
                volumes:
                  - azurefiles:${VOLUME_DEST}

            volumes:
              azurefiles:
                driver: azurefile
                driver_opts:
                  share_name: $AZURE_FILE_SHARE
                  storage_account_name: $AZURE_STORAGE_ACCOUNT
                  storage_account_key: $AZURE_STORAGE_KEY
            EOT

            # Subir o Docker Compose
            cd $DEPLOY_DIR
            docker-compose up -d
          EOF
